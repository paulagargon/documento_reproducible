width = 0.2, color = "darkgreen") + # Error bars
labs(title = "Promedio de Precipitación por Especie",
x = "Especie",
y = "Precipitación (mm)") +
theme_minimal()
ggplot(precip_sp, aes(x = especie, y = precipitacion)) +
geom_bar(stat = "identity", fill = "lightgreen", color = "darkgray") + # Barras
geom_errorbar(aes(ymin = precipitacion - sd, ymax = precipitacion + sd),
width = 0.2, color = "darkgreen") + # Error bars
labs(title = "Promedio de Precipitación por Especie",
x = "Especie",
y = "Precipitación (mm)") +
theme_minimal()
ggplot(precip_sp, aes(x = especie, y = precipitacion)) +
geom_bar(stat = "identity", fill = "lightgreen", color = "darkgray") + # Barras
geom_errorbar(aes(ymin = precipitacion - sd, ymax = precipitacion + sd),
width = 0.2, color = "darkgreen") + # Error bars
labs(title = "Promedio de Precipitación por Especie",
x = "Especie",
y = "Precipitación (mm)") +
theme_minimal()
dev.off()
precip_sp <- data.frame(
especie = c("P. halepensis", "P. nigra", "P. pinaster", "P. sylvestris"),
precipitacion = NA,
sd = NA
)
# P. halepensis
precip_sp$precipitacion[1] <- climaprom |>
filter(str_detect(sp_elev, pattern = "halepensis")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sp$sd[1] <- climaprom |>
filter(str_detect(sp_elev, pattern = "halepensis")) |>
summarise(altura_sd = sd(monthly_prec))
# P. nigra
precip_sp$precipitacion[2] <- climaprom |>
filter(str_detect(sp_elev, pattern = "nigra")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sp$sd[2] <- climaprom |>
filter(str_detect(sp_elev, pattern = "nigra")) |>
summarise(altura_sd = sd(monthly_prec))
# P. pinaster
precip_sp$precipitacion[3] <- climaprom |>
filter(str_detect(sp_elev, pattern = "pinaster")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sp$sd[3] <- climaprom |>
filter(str_detect(sp_elev, pattern = "pinaster")) |>
summarise(altura_sd = sd(monthly_prec))
# P. sylvestris
precip_sp$precipitacion[4] <- climaprom |>
filter(str_detect(sp_elev, pattern = "sylvestris")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sp$sd[4] <- climaprom |>
filter(str_detect(sp_elev, pattern = "sylvestris")) |>
summarise(altura_sd = sd(monthly_prec))
precip_sp |>
knitr::kable(caption = "Precipitación media anual por especie")
precip_sp <- data.frame(
especie = c("P. halepensis", "P. nigra", "P. pinaster", "P. sylvestris"),
precipitacion = NA,
sd = NA
)
# P. halepensis
precip_sp$precipitacion[1] <- climaprom |>
filter(str_detect(sp_elev, pattern = "halepensis")) |>
summarise(precipitacion_media = mean(monthly_prec))
# Cargamos paquetes necesarios
library(tibble)
library(ggplot2)
library(tidyverse)
library(knitr)
library(broom)
library(leaflet)
library(mapSpain)
library(stringr)
# 1. Escribe un bucle que lea los archivos climáticos y los guarde en una lista, pero añadiendo el nombre de cada sitio (obtenido del nombre del archivo).
clima <- list.files("../data/clima/")
lista <- list()
for (i in 1:length(clima)) {
lista[[i]] <- read.table(paste0("../data/clima/", clima[i]), sep = ",", header = TRUE)
names(lista)[i] <- clima[i]
}
clima_lista <- enframe(lista) # Tenemos una lista formada por una serie de listas, en total 12 listas, una para cada csv de clima. Cada lista tiene el nombre del propio csv.
# 2. ¿Podríamos generar un dataframe homogéneo a partir de la lista generada?
clima_df <- as.data.frame(clima_lista)
# 3. Calcula los valores promedio de temperatura media anual por sitio; y por especie
climaprom <- clima_lista |>
unnest_wider(value) |>
unnest(c(sp_elev, year, month, monthly_pet, monthly_tmed, monthly_prec)) |>
select(-name)
temp_sp <- data.frame(
especie = c("P. halepensis", "P. nigra", "P. pinaster", "P. sylvestris"),
temperatura = NA
)
temp_sp$temperatura[1] <- climaprom |>
filter(str_detect(sp_elev, pattern = "halepensis")) |>
summarise(temperatura_media = mean(monthly_tmed))
temp_sp$temperatura[2] <- climaprom |>
filter(str_detect(sp_elev, pattern = "nigra")) |>
summarise(temperatura_media = mean(monthly_tmed))
temp_sp$temperatura[3] <- climaprom |>
filter(str_detect(sp_elev, pattern = "pinaster")) |>
summarise(temperatura_media = mean(monthly_tmed))
temp_sp$temperatura[4] <- climaprom |>
filter(str_detect(sp_elev, pattern = "sylvestris")) |>
summarise(temperatura_media = mean(monthly_tmed))
temp_sp |>
knitr::kable(caption = "Temperatura media anual por especie")
temp_sitio <- data.frame(
especie = c("High", "Medium", "Low"),
temperatura = NA
)
temp_sitio$temperatura[1] <- climaprom |>
filter(str_detect(sp_elev, pattern = "high")) |>
summarise(temperatura_media = mean(monthly_tmed))
temp_sitio$temperatura[2] <- climaprom |>
filter(str_detect(sp_elev, pattern = "medium")) |>
summarise(temperatura_media = mean(monthly_tmed))
temp_sitio$temperatura[3] <- climaprom |>
filter(str_detect(sp_elev, pattern = "low")) |>
summarise(temperatura_media = mean(monthly_tmed))
temp_sitio |>
knitr::kable(caption = "Temperatura media anual por sitio")
# 4. Calcula los valores promedio (y la desviación estándar) de la precitación acumulada anual por sitio; y por especie. ¿Podrías realizar un gráfico de barras con los promedios de la precipitación? ¿Y añadirle las desviaciones estándar?
precip_sp <- data.frame(
especie = c("P. halepensis", "P. nigra", "P. pinaster", "P. sylvestris"),
precipitacion = NA,
sd = NA
)
# P. halepensis
precip_sp$precipitacion[1] <- climaprom |>
filter(str_detect(sp_elev, pattern = "halepensis")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sp$sd[1] <- climaprom |>
filter(str_detect(sp_elev, pattern = "halepensis")) |>
summarise(altura_sd = sd(monthly_prec))
# P. nigra
precip_sp$precipitacion[2] <- climaprom |>
filter(str_detect(sp_elev, pattern = "nigra")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sp$sd[2] <- climaprom |>
filter(str_detect(sp_elev, pattern = "nigra")) |>
summarise(altura_sd = sd(monthly_prec))
# P. pinaster
precip_sp$precipitacion[3] <- climaprom |>
filter(str_detect(sp_elev, pattern = "pinaster")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sp$sd[3] <- climaprom |>
filter(str_detect(sp_elev, pattern = "pinaster")) |>
summarise(altura_sd = sd(monthly_prec))
# P. sylvestris
precip_sp$precipitacion[4] <- climaprom |>
filter(str_detect(sp_elev, pattern = "sylvestris")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sp$sd[4] <- climaprom |>
filter(str_detect(sp_elev, pattern = "sylvestris")) |>
summarise(altura_sd = sd(monthly_prec))
precip_sp |>
knitr::kable(caption = "Precipitación media anual por especie")
ggplot(precip_sp, aes(x = especie, y = precipitacion)) +
geom_bar(stat = "identity", fill = "lightgreen", color = "darkgray") + # Barras
geom_errorbar(aes(ymin = precipitacion - sd, ymax = precipitacion + sd),
width = 0.2, color = "darkgreen") + # Error bars
labs(title = "Promedio de Precipitación por Especie",
x = "Especie",
y = "Precipitación (mm)") +
theme_minimal()
View(precip_sp)
precip_sp <- data.frame(
especie = c("P_halepensis", "P_nigra", "P_pinaster", "P_sylvestris"),
precipitacion = NA,
sd = NA
)
# P. halepensis
precip_sp$precipitacion[1] <- climaprom |>
filter(str_detect(sp_elev, pattern = "halepensis")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sp$sd[1] <- climaprom |>
filter(str_detect(sp_elev, pattern = "halepensis")) |>
summarise(altura_sd = sd(monthly_prec))
# P. nigra
precip_sp$precipitacion[2] <- climaprom |>
filter(str_detect(sp_elev, pattern = "nigra")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sp$sd[2] <- climaprom |>
filter(str_detect(sp_elev, pattern = "nigra")) |>
summarise(altura_sd = sd(monthly_prec))
# P. pinaster
precip_sp$precipitacion[3] <- climaprom |>
filter(str_detect(sp_elev, pattern = "pinaster")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sp$sd[3] <- climaprom |>
filter(str_detect(sp_elev, pattern = "pinaster")) |>
summarise(altura_sd = sd(monthly_prec))
# P. sylvestris
precip_sp$precipitacion[4] <- climaprom |>
filter(str_detect(sp_elev, pattern = "sylvestris")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sp$sd[4] <- climaprom |>
filter(str_detect(sp_elev, pattern = "sylvestris")) |>
summarise(altura_sd = sd(monthly_prec))
precip_sp |>
knitr::kable(caption = "Precipitación media anual por especie")
setwd("C:/Users/Paula/Desktop/Máster/Ecoinformática/TEMA 2. Reproducibilidad/ejercicio_reproducibilidad")
precip_sp <- data.frame(
especie = c("P_halepensis", "P_nigra", "P_pinaster", "P_sylvestris"),
precipitacion = NA,
sd = NA
)
# P. halepensis
precip_sp$precipitacion[1] <- climaprom |>
filter(str_detect(sp_elev, pattern = "halepensis")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sp$sd[1] <- climaprom |>
filter(str_detect(sp_elev, pattern = "halepensis")) |>
summarise(altura_sd = sd(monthly_prec))
# P. nigra
precip_sp$precipitacion[2] <- climaprom |>
filter(str_detect(sp_elev, pattern = "nigra")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sp$sd[2] <- climaprom |>
filter(str_detect(sp_elev, pattern = "nigra")) |>
summarise(altura_sd = sd(monthly_prec))
# P. pinaster
precip_sp$precipitacion[3] <- climaprom |>
filter(str_detect(sp_elev, pattern = "pinaster")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sp$sd[3] <- climaprom |>
filter(str_detect(sp_elev, pattern = "pinaster")) |>
summarise(altura_sd = sd(monthly_prec))
# P. sylvestris
precip_sp$precipitacion[4] <- climaprom |>
filter(str_detect(sp_elev, pattern = "sylvestris")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sp$sd[4] <- climaprom |>
filter(str_detect(sp_elev, pattern = "sylvestris")) |>
summarise(altura_sd = sd(monthly_prec))
precip_sp |>
knitr::kable(caption = "Precipitación media anual por especie")
# Cargamos paquetes necesarios
library(tibble)
library(ggplot2)
library(tidyverse)
library(knitr)
library(broom)
library(leaflet)
library(mapSpain)
library(stringr)
# 1. Escribe un bucle que lea los archivos climáticos y los guarde en una lista, pero añadiendo el nombre de cada sitio (obtenido del nombre del archivo).
clima <- list.files("../data/clima/")
lista <- list()
for (i in 1:length(clima)) {
lista[[i]] <- read.table(paste0("../data/clima/", clima[i]), sep = ",", header = TRUE)
names(lista)[i] <- clima[i]
}
clima_lista <- enframe(lista) # Tenemos una lista formada por una serie de listas, en total 12 listas, una para cada csv de clima. Cada lista tiene el nombre del propio csv.
# 1. Escribe un bucle que lea los archivos climáticos y los guarde en una lista, pero añadiendo el nombre de cada sitio (obtenido del nombre del archivo).
clima <- list.files("../data/clima/")
lista <- list()
for (i in 1:length(clima)) {
lista[[i]] <- read.table(paste0("../data/clima/", clima[i]), sep = ",", header = TRUE)
names(lista)[i] <- clima[i]
}
clima_lista <- enframe(lista) # Tenemos una lista formada por una serie de listas, en total 12 listas, una para cada csv de clima. Cada lista tiene el nombre del propio csv.
# 3. Calcula los valores promedio de temperatura media anual por sitio; y por especie
climaprom <- clima_lista |>
unnest_wider(value) |>
unnest(c(sp_elev, year, month, monthly_pet, monthly_tmed, monthly_prec)) |>
select(-name)
temp_sp <- data.frame(
especie = c("P. halepensis", "P. nigra", "P. pinaster", "P. sylvestris"),
temperatura = NA
)
temp_sp$temperatura[1] <- climaprom |>
filter(str_detect(sp_elev, pattern = "halepensis")) |>
summarise(temperatura_media = mean(monthly_tmed))
temp_sp$temperatura[2] <- climaprom |>
filter(str_detect(sp_elev, pattern = "nigra")) |>
summarise(temperatura_media = mean(monthly_tmed))
temp_sp$temperatura[3] <- climaprom |>
filter(str_detect(sp_elev, pattern = "pinaster")) |>
summarise(temperatura_media = mean(monthly_tmed))
temp_sp$temperatura[4] <- climaprom |>
filter(str_detect(sp_elev, pattern = "sylvestris")) |>
summarise(temperatura_media = mean(monthly_tmed))
temp_sp |>
knitr::kable(caption = "Temperatura media anual por especie")
temp_sitio <- data.frame(
especie = c("High", "Medium", "Low"),
temperatura = NA
)
temp_sitio$temperatura[1] <- climaprom |>
filter(str_detect(sp_elev, pattern = "high")) |>
summarise(temperatura_media = mean(monthly_tmed))
temp_sitio$temperatura[2] <- climaprom |>
filter(str_detect(sp_elev, pattern = "medium")) |>
summarise(temperatura_media = mean(monthly_tmed))
temp_sitio$temperatura[3] <- climaprom |>
filter(str_detect(sp_elev, pattern = "low")) |>
summarise(temperatura_media = mean(monthly_tmed))
temp_sitio |>
knitr::kable(caption = "Temperatura media anual por sitio")
# 4. Calcula los valores promedio (y la desviación estándar) de la precitación acumulada anual por sitio; y por especie. ¿Podrías realizar un gráfico de barras con los promedios de la precipitación? ¿Y añadirle las desviaciones estándar?
precip_sp <- data.frame(
especie = c("P_halepensis", "P_nigra", "P_pinaster", "P_sylvestris"),
precipitacion = NA,
sd = NA
)
# P. halepensis
precip_sp$precipitacion[1] <- climaprom |>
filter(str_detect(sp_elev, pattern = "halepensis")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sp$sd[1] <- climaprom |>
filter(str_detect(sp_elev, pattern = "halepensis")) |>
summarise(altura_sd = sd(monthly_prec))
# P. nigra
precip_sp$precipitacion[2] <- climaprom |>
filter(str_detect(sp_elev, pattern = "nigra")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sp$sd[2] <- climaprom |>
filter(str_detect(sp_elev, pattern = "nigra")) |>
summarise(altura_sd = sd(monthly_prec))
# P. pinaster
precip_sp$precipitacion[3] <- climaprom |>
filter(str_detect(sp_elev, pattern = "pinaster")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sp$sd[3] <- climaprom |>
filter(str_detect(sp_elev, pattern = "pinaster")) |>
summarise(altura_sd = sd(monthly_prec))
# P. sylvestris
precip_sp$precipitacion[4] <- climaprom |>
filter(str_detect(sp_elev, pattern = "sylvestris")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sp$sd[4] <- climaprom |>
filter(str_detect(sp_elev, pattern = "sylvestris")) |>
summarise(altura_sd = sd(monthly_prec))
precip_sp |>
knitr::kable(caption = "Precipitación media anual por especie")
ggplot(precip_sp, aes(x = especie, y = precipitacion)) +
geom_bar(stat = "identity", fill = "lightgreen", color = "darkgray") + # Barras
geom_errorbar(aes(ymin = precipitacion - sd, ymax = precipitacion + sd),
width = 0.2, color = "darkgreen") + # Error bars
labs(title = "Promedio de Precipitación por Especie",
x = "Especie",
y = "Precipitación (mm)") +
theme_minimal()
str(precip_sp)
# Convierte las columnas a vectores numéricos
precip_sp$precipitacion <- unlist(precip_sp$precipitacion)
precip_sp$sd <- unlist(precip_sp$sd)
ggplot(precip_sp, aes(x = especie, y = precipitacion)) +
geom_bar(stat = "identity", fill = "lightgreen", color = "darkgray") + # Barras
geom_errorbar(aes(ymin = precipitacion - sd, ymax = precipitacion + sd),
width = 0.2, color = "darkgreen") + # Error bars
labs(title = "Promedio de Precipitación por Especie",
x = "Especie",
y = "Precipitación (mm)") +
theme_minimal()
# Convierte las columnas a vectores numéricos
precip_sp$precipitacion <- unlist(precip_sp$precipitacion)
precip_sp$sd <- unlist(precip_sp$sd)
ggplot(precip_sp, aes(x = especie, y = precipitacion)) +
geom_bar(stat = "identity", fill = "lightgreen", color = "darkgray") + # Barras
geom_errorbar(aes(ymin = precipitacion - sd, ymax = precipitacion + sd),
width = 0.2, color = "darkgreen") + # Error bars
labs(title = "Precipitacion por especie",
x = "Especie",
y = "Precipitacion (mm)") +
theme_minimal()
precip_sitio <- data.frame(
sitio = c("High", "Medium", "Low"),
precipitacion = NA,
sd = NA
)
# High
precip_sitio$precipitacion[1] <- climaprom |>
filter(str_detect(sp_elev, pattern = "high")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sitio$sd[1] <- climaprom |>
filter(str_detect(sp_elev, pattern = "high")) |>
summarise(sd = sd(monthly_prec))
# Medium
precip_sitio$precipitacion[2] <- climaprom |>
filter(str_detect(sp_elev, pattern = "medium")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sitio$sd[2] <- climaprom |>
filter(str_detect(sp_elev, pattern = "medium")) |>
summarise(sd = sd(monthly_prec))
# Low
precip_sitio$precipitacion[3] <- climaprom |>
filter(str_detect(sp_elev, pattern = "low")) |>
summarise(precipitacion_media = mean(monthly_prec))
precip_sitio$sd[3] <- climaprom |>
filter(str_detect(sp_elev, pattern = "low")) |>
summarise(sd = sd(monthly_prec))
precip_sitio |>
knitr::kable(caption = "Precipitación media anual por sitio")
# Convierte las columnas a vectores numéricos
precip_sitio$precipitacion <- unlist(precip_sitio$precipitacion)
precip_sitio$sd <- unlist(precip_sitio$sd)
ggplot(precip_sitio, aes(x = sitio, y = precipitacion)) +
geom_bar(stat = "identity", fill = "lightblue", color = "darkgray") + # Barras
geom_errorbar(aes(ymin = precipitacion - sd, ymax = precipitacion + sd),
width = 0.2, color = "darkblue") + # Error bars
labs(title = "Precipitacion por sitio",
x = "Sitio",
y = "Precipitacion (mm)") +
theme_minimal()
View(temp_sp)
View(temp_sitio)
View(precip_sitio)
knitr::knit_print("bibliografia.bib")
knitr::knit_print("../data/bibliografia.bib")
install.packages("citr")
library(citr)
library("citr")
install.packages("citr")
library("citr")
install.packages("citr")
devtools::install_github("crsh/citr")
library("citr")
library("citr")
library("crsh/citr")
library("crsh/citr")
# Mapa interactivo con leaflet
leaflet() |>
addProviderEspTiles("IGNBase.Gris", group = "Base") |>
addProviderTiles("Esri.WorldImagery",
group = "World Imagery (ESRI)",
options = providerTileOptions(maxZoom = 25)) |>
setView(lng = -3.4698, lat = 37.0851, zoom = 12) |>
addMarkers(lng = -3.4698, lat = 37.0851, popup = "Zona de Estudio") |>
addLayersControl(
position = "bottomright",
baseGroups = c("World Imagery (ESRI)", "Base"),
options = layersControlOptions(collapsed = TRUE)
)
install.packages("leaflet")
library("leaflet")
install.packages("leaflet")
library(leaflet)
library("leaflet")
library("leaflet")
# Mapa interactivo con leaflet
leaflet() |>
addProviderEspTiles("IGNBase.Gris", group = "Base") |>
addProviderTiles("Esri.WorldImagery",
group = "World Imagery (ESRI)",
options = providerTileOptions(maxZoom = 25)) |>
setView(lng = -3.4698, lat = 37.0851, zoom = 12) |>
addMarkers(lng = -3.4698, lat = 37.0851, popup = "Zona de Estudio") |>
addLayersControl(
position = "bottomright",
baseGroups = c("World Imagery (ESRI)", "Base"),
options = layersControlOptions(collapsed = TRUE)
)
library(leaflet)
# Mapa interactivo con leaflet
leaflet() |>
addProviderEspTiles("IGNBase.Gris", group = "Base") |>
addProviderTiles("Esri.WorldImagery",
group = "World Imagery (ESRI)",
options = providerTileOptions(maxZoom = 25)) |>
setView(lng = -3.4698, lat = 37.0851, zoom = 12) |>
addMarkers(lng = -3.4698, lat = 37.0851, popup = "Zona de Estudio") |>
addLayersControl(
position = "bottomright",
baseGroups = c("World Imagery (ESRI)", "Base"),
options = layersControlOptions(collapsed = TRUE)
)
install.packages("leaflet.es")
library(leaflet.es)
install.packages("remotes")
remotes::install_github("rCarto/leaflet.es")
library(remotes)
remotes::install_github("rCarto/leaflet.es")
remotes::install_github("rstudio/leaflet.providers")
library(leaflet)
library(leaflet.providers)
library(leaflet)
library(leaflet.providers)
# Mapa interactivo con leaflet
leaflet() |>
addProviderEspTiles("IGNBase.Gris", group = "Base") |>
addProviderTiles("Esri.WorldImagery",
group = "World Imagery (ESRI)",
options = providerTileOptions(maxZoom = 25)) |>
setView(lng = -3.4698, lat = 37.0851, zoom = 12) |>
addMarkers(lng = -3.4698, lat = 37.0851, popup = "Zona de Estudio") |>
addLayersControl(
position = "bottomright",
baseGroups = c("World Imagery (ESRI)", "Base"),
options = layersControlOptions(collapsed = TRUE)
)
library(leaflet)
library(leaflet.providers)
library(leaflet)
# Mapa interactivo con leaflet
leaflet() |>
addProviderEspTiles("IGNBase.Gris", group = "Base") |>
addProviderTiles("Esri.WorldImagery",
group = "World Imagery (ESRI)",
options = providerTileOptions(maxZoom = 25)) |>
setView(lng = -3.4698, lat = 37.0851, zoom = 12) |>
addMarkers(lng = -3.4698, lat = 37.0851, popup = "Zona de Estudio") |>
addLayersControl(
position = "bottomright",
baseGroups = c("World Imagery (ESRI)", "Base"),
options = layersControlOptions(collapsed = TRUE)
)
install.packages("addProviderEspTiles")
leaflet::providers
